// Generated by data binding compiler. Do not edit!
package com.skydoves.pokedex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.skydoves.pokedex.R;
import com.skydoves.pokedex.ui.main.MainViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ToolbarHomeBinding extends ViewDataBinding {
  @NonNull
  public final ImageView clearSearchButton;

  @NonNull
  public final CardView searchCard;

  @NonNull
  public final EditText searchEditText;

  @NonNull
  public final ImageView searchIcon;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView toolbarTitle;

  @Bindable
  protected MainViewModel mVm;

  protected ToolbarHomeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView clearSearchButton, CardView searchCard, EditText searchEditText,
      ImageView searchIcon, Toolbar toolbar, TextView toolbarTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.clearSearchButton = clearSearchButton;
    this.searchCard = searchCard;
    this.searchEditText = searchEditText;
    this.searchIcon = searchIcon;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
  }

  public abstract void setVm(@Nullable MainViewModel vm);

  @Nullable
  public MainViewModel getVm() {
    return mVm;
  }

  @NonNull
  public static ToolbarHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.toolbar_home, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ToolbarHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ToolbarHomeBinding>inflateInternal(inflater, R.layout.toolbar_home, root, attachToRoot, component);
  }

  @NonNull
  public static ToolbarHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.toolbar_home, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ToolbarHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ToolbarHomeBinding>inflateInternal(inflater, R.layout.toolbar_home, null, false, component);
  }

  public static ToolbarHomeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ToolbarHomeBinding bind(@NonNull View view, @Nullable Object component) {
    return (ToolbarHomeBinding)bind(component, view, R.layout.toolbar_home);
  }
}
