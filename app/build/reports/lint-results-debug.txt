/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.application than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.application than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.application than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.library than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.library than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.library than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.test than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.test than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/gradle/libs.versions.toml:4: Warning: A newer version of com.android.test than 8.7.2 is available: 8.8.2. (There is also a newer version of 8.7.洧논 available, if upgrading to 8.8.2 is difficult: 8.7.3) [AndroidGradlePluginVersion]
agp = "8.7.2"
      ~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

/Users/siffatjotsingh/StudioProjects/Pokedex/app/src/main/AndroidManifest.xml:24: Warning: The attribute android:allowBackup is deprecated from Android 12 and higher and may be removed in future versions. Consider adding the attribute android:dataExtractionRules specifying an @xml resource which configures cloud backups and device transfers on Android 12 and higher. [DataExtractionRules]
    android:allowBackup="false"
                         ~~~~~

   Explanation for issues of type "DataExtractionRules":
   Before Android 12, the attributes android:allowBackup and
   android:fullBackupContent were used to configure all forms of backup,
   including cloud backups, device-to-device transfers and adb backup.

   In Android 12 and higher, these attributes have been deprecated and will
   only apply to cloud backups. You should instead use the attribute
   android:dataExtractionRules, specifying an @xml resource that configures
   which files to back up, for cloud backups and for device-to-device
   transfers, separately. If your minSdkVersion supports older versions,
   you'll still want to specify an android:fullBackupContent resource if the
   default behavior is not right for your app.

   https://developer.android.com/about/versions/12/backup-restore#xml-changes
   https://goo.gle/DataExtractionRules

/Users/siffatjotsingh/StudioProjects/Pokedex/app/src/main/res/layout/toolbar_home.xml:21: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/AppTheme) [Overdraw]
  android:background="@color/colorPrimary">
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

/Users/siffatjotsingh/StudioProjects/Pokedex/app/src/main/res/values/colors.xml:23: Warning: The resource R.color.background900 appears to be unused [UnusedResources]
  <color name="background900">#212121</color>
         ~~~~~~~~~~~~~~~~~~~~
/Users/siffatjotsingh/StudioProjects/Pokedex/app/src/main/res/drawable/ic_launcher_background.xml:17: Warning: The resource R.drawable.ic_launcher_background appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
/Users/siffatjotsingh/StudioProjects/Pokedex/app/src/main/res/drawable-v24/ic_launcher_foreground.xml:17: Warning: The resource R.drawable.ic_launcher_foreground appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
/Users/siffatjotsingh/StudioProjects/Pokedex/app/src/main/res/values/styles.xml:35: Warning: The resource R.style.CircleImageStyle appears to be unused [UnusedResources]
  <style name="CircleImageStyle" parent="">
         ~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/Users/siffatjotsingh/StudioProjects/Pokedex/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml:17: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

0 errors, 16 warnings
